{"version":3,"sources":["webpack:///./src/components/CustomShareBlock.js","webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/images/danivelop.png","webpack:///./src/components/tags/TechTag.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header/MobileSocialLinks.js","webpack:///./src/components/header/MobilePageLinks.js","webpack:///./src/components/header/SocialLinks.js","webpack:///./src/components/header/MobileBio.js","webpack:///./src/components/header/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/sidebar/Bio.js","webpack:///./src/components/sidebar/SocialLinks.js","webpack:///./src/components/sidebar/TechTags.js","webpack:///./src/components/sidebar/Sidebar.js"],"names":["CustomShareBlock","props","url","title","siteName","shareBlockProps","button","ShareButtonIconOnly","buttons","network","icon","FaTwitter","FaFacebook","FaLinkedin","FaEnvelope","text","longtext","react_default","a","createElement","className","dist","propTypes","PropTypes","string","defaultProps","query","BlogPost","post","data","markdownRemark","labels","site","siteMetadata","tags","pageContext","slug","frontmatter","layout","seo","Sidebar","techTags","forEach","tag","i","label","push","TechTag","key","tech","name","size","color","getTechTags","date","dangerouslySetInnerHTML","__html","html","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","render","children","object","isRequired","func","m","module","exports","require","default","p","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","style","fontSize","role","viewBox","xmlns","width","height","fill","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","arrayOf","MobileSocialLinks","contacts","target","href","github","index_esm","MobilePages","gatsby_browser_entry","SocialLinks","MobileBio","src","danivelop","alt","Header","siteTitle","tagline","background","margin","padding","textDecoration","header_SocialLinks","header_MobileSocialLinks","MobilePageLinks","header_MobileBio","Layout","Fragment","header_header","paddingTop","Date","getFullYear","_2988051195","node","Bio","TechTags","posts","map","count","includes","filter","category","sidebar_Bio","sidebar_SocialLinks","sidebar_TechTags","allMarkdownRemark","edges","_1503498308"],"mappings":"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","file":"component---src-templates-blog-post-js-4300940def3c973d722e.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { FaTwitter, FaLinkedin, FaFacebook, FaEnvelope } from \"react-icons/fa\";\nimport { ShareBlockStandard, ShareButtonIconOnly } from \"react-custom-share\";\n\nconst CustomShareBlock = props => {\n    const { url, title, siteName } = props;\n\n    const shareBlockProps = {\n        url: url,\n        button: ShareButtonIconOnly,\n        buttons: [\n            { network: \"Twitter\", icon: FaTwitter },\n            { network: \"Facebook\", icon: FaFacebook },\n            { network: \"Linkedin\", icon: FaLinkedin },\n            { network: \"Email\", icon: FaEnvelope }\n        ],\n        text: title,\n        longtext: siteName\n    };\n    return (\n        <div className=\"mt-4\">\n            <ShareBlockStandard {...shareBlockProps} />\n            <p className=\"text-center\"><i>If you like it, share it!</i></p>\n        </div>\n    )\n};\n\nCustomShareBlock.propTypes = {\n    url: PropTypes.string,\n    title: PropTypes.string,\n    siteName: PropTypes.string\n};\n\nCustomShareBlock.defaultProps = {\n    url: \"https://mywebsite.com/page-to-share/\",\n    title: \"Default value of title\",\n    siteName: \"Default value of excerpt\"\n};\n\nexport default CustomShareBlock;\n\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport \"./blog-post.css\"\n\nimport Sidebar from \"../components/sidebar/Sidebar\"\nimport TechTag from \"../components/tags/TechTag\"\nimport CustomShareBlock from \"../components/CustomShareBlock\"\n\nconst BlogPost = (props) => {\n  const post = props.data.markdownRemark\n  const labels = props.data.site.siteMetadata.labels\n  const siteName = props.data.site.siteMetadata.title \n  const siteUrl = props.data.site.siteMetadata.url\n  const url = `${siteUrl}${props.pageContext.slug}`;\n  const tags = post.frontmatter.tags\n\n  const getTechTags = (tags) => {\n    const techTags = []\n    tags.forEach((tag, i) => {\n      labels.forEach((label) => {\n        if (tag === label.tag) {\n          techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\n        }\n      })\n    })\n    return techTags\n  }\n\n  return (\n    <Layout>\n      <SEO title={post.frontmatter.title} />\n      <div className=\"post-page-main\">\n        <div className=\"sidebar px-4 py-2\">\n          <Sidebar />\n        </div>\n\n        <div className=\"post-main\">\n          <SEO title={post.frontmatter.title} />\n          <div className=\"mt-3\">\n            <h2 className=\"heading\">{post.frontmatter.title}</h2>\n            <div className=\"d-block\">\n              {getTechTags(tags)}\n            </div>\n            <br />\n            <small>{post.frontmatter.date}</small>\n            <div dangerouslySetInnerHTML={{ __html: post.html }} />\n            {/* <CustomShareBlock title={post.frontmatter.title} siteName={siteName} url={url} /> */}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n      site {\n        siteMetadata {\n          url\n          title\n          labels {\n              tag\n              tech \n              name \n              size \n              color\n          }\n        }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n      }\n    }\n  }\n`\n\nexport default BlogPost\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","module.exports = __webpack_public_path__ + \"static/danivelop-e4779314e6fc0af2fea09591f35fa90c.png\";","import React from \"react\"\n\nimport \"./tags.css\"\nimport { Link } from \"gatsby\";\n\nconst TechTag = (props) => {\n    const { tag, tech, name, size, color } = props\n\n    return (\n        <div className=\"d-inline-block p-1\">\n            <Link to={`/tags/${tag}/`}>\n                <button\n                    className=\"tech-tag text-white\">\n                    <p className=\"d-inline\">{tech} </p>\n                    <div className=\"d-inline\" style={{ fontSize: size, color: color }}><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} style={{fill: `${color}`}}>\n                            <title>{tech}</title>\n                            <path\n                                d={name} />\n                        </svg></div>\n                </button>\n            </Link>\n\n        </div>\n\n    )\n}\n\nexport default TechTag","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\";\nimport {\n    FaLinkedin,\n    FaGithubSquare,\n    FaStackOverflow,\n    FaFreeCodeCamp,\n    FaTwitterSquare\n} from \"react-icons/fa\"\n\nimport \"../layout.css\"\n\nconst MobileSocialLinks = ({ contacts }) => {\n    return (\n        <div className=\"bottom-bar py-1\">\n            {/* <a className=\" text-primary\" target=\"_blank\"\n                href={contacts.linkedin}>\n                <span title=\"Linked In\">\n                    <FaLinkedin size={26} style={{ color: \"primary\" }} />\n                </span>\n            </a> */}\n            <a className=\"text-light\" target=\"_blank\"\n                href={contacts.github}>\n                <span title=\"GitHub\">\n                    <FaGithubSquare size={26} style={{ color: \"light\" }} />\n                </span>\n            </a>\n            {/* <a className=\"text-warning\" target=\"_blank\"\n                href={contacts.stackoverflow}>\n                <span title=\"Stack Overflow\">\n                    <FaStackOverflow size={26} style={{ color: \"warning\" }} />\n                </span>\n            </a> */}\n            {/* <a className=\"text-success\" target=\"_blank\"\n                href={contacts.freecodecamp}>\n                <span title=\"freeCodeCamp\">\n                    <FaFreeCodeCamp size={26} style={{ color: \"success\" }} />\n                </span>\n            </a> */}\n            {/* <a className=\"text-info\" target=\"_blank\"\n                href={contacts.twitter}>\n                <span title=\"Twitter\">\n                    <FaTwitterSquare size={26} style={{ color: \"info\" }} />\n                </span>\n            </a> */}\n        </div>\n    )\n}\n\nexport default MobileSocialLinks;","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst MobilePages = () => {\n    return (\n        <div className=\"mobile-pages-main\">\n            <div className=\"text-center\">\n                <p className=\"d-inline p-4\"><Link to=\"/\"><span className=\"text-dark\">Blog Home</span></Link></p>\n                <p className=\"d-inline p-4\"><Link to=\"/about\"><span className=\"text-dark\">About</span></Link></p>\n                <p className=\"d-inline p-4\"><Link to=\"/archive\"><span className=\"text-dark\">Archive</span></Link></p>\n            </div>\n        </div>\n    )\n}\n\nexport default MobilePages\n\n\n","import React from \"react\"\nimport {\n    FaLinkedin,\n    FaGithubSquare,\n    FaStackOverflow,\n    FaFreeCodeCamp,\n    FaTwitterSquare\n} from \"react-icons/fa\"\n\n\nconst SocialLinks = ({ contacts }) => {\n    return (\n        <div className=\"social-links float-right mr-4\">\n            {/* <a className=\"text-primary ml-4\" target=\"_blank\"\n                href={contacts.linkedin}>\n                <span title=\"Linked In\">\n                    <FaLinkedin size={40} style={{ color: \"primary\" }} />\n                </span>\n            </a> */}\n            <a className=\"text-light ml-4\" target=\"_blank\"\n                href={contacts.github}>\n                <span title=\"GitHub\">\n                    <FaGithubSquare size={40} style={{ color: \"light\" }} />\n                </span>\n            </a>\n            {/* <a className=\"text-warning ml-4\" target=\"_blank\"\n                href={contacts.stackoverflow}>\n                <span title=\"Stack Overflow\">\n                    <FaStackOverflow size={40} style={{ color: \"warning\" }} />\n                </span>\n            </a> */}\n            {/* <a className=\"text-success ml-4\" target=\"_blank\"\n                href={contacts.freecodecamp}>\n                <span title=\"freeCodeCamp\">\n                    <FaFreeCodeCamp size={40} style={{ color: \"success\" }} />\n                </span>\n            </a> */}\n            {/* <a className=\"text-info ml-4\" target=\"_blank\"\n                href={contacts.twitter}>\n                <span title=\"Twitter\">\n                    <FaTwitterSquare size={40} style={{ color: \"info\" }} />\n                </span>\n            </a> */}\n        </div>\n    )\n}\n\nexport default SocialLinks","import React from \"react\"\n\nimport \"./header.css\"\nimport danivelop from \"../../images/danivelop.png\"\n\nconst MobileBio = (props) => {\n\n    return (\n        <div className=\"mobile-bio-main\">\n            <div className=\"ml-4 mt-2 mobile-profile\">\n                <img src={danivelop} alt=\"author-pic\" />\n            </div>\n            {/* <img src={danivelop}  className=\"ml-4 mt-2\" style={{ maxWidth: `75px`, maxHeight: `75px`, borderRadius: `50%`,boxShadow: `1px 1px 3px`}} alt=\"author-pic\" /> */}\n            <h4 className=\"mr-4 mt-4\">{props.author}</h4>\n        </div>\n    )\n}\n\nexport default MobileBio","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\n\n\nimport MobileSocialLinks from \"./MobileSocialLinks\"\nimport MobilePageLinks from \"./MobilePageLinks\"\nimport SocialLinks from \"./SocialLinks\"\nimport MobileBio from \"./MobileBio\"\nimport \"./header.css\"\n\nconst Header = ({ siteTitle, tagline, author, contacts }) => {\n\n  return (\n    <header\n      className=\"head-main\"\n      style={{\n        background: `black`\n      }}\n    >\n      <div className=\"head-elements\"\n        style={{\n          margin: `0`,\n          padding: `.75rem`\n        }}\n      >\n        <h1 className=\"head-logo ml-4\" style={{ margin: 0 }}>\n          <Link\n            to=\"/\"\n            style={{\n              color: `white`,\n              textDecoration: `none`,\n            }}\n          >\n            {siteTitle}\n          </Link>\n        </h1>\n        <SocialLinks contacts={contacts} />\n      </div>\n      <MobileSocialLinks contacts={contacts} />\n      <MobilePageLinks />\n      <MobileBio author={author} />\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport Header from \"./header/header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n\n  return (\n    <StaticQuery\n      query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            tagline\n            author\n            contacts {\n              linkedin\n              github\n              stackoverflow\n              freecodecamp\n              twitter\n            }\n          }\n        }\n      }\n    `}\n      render={data => (\n        <>\n          <Header\n            siteTitle={data.site.siteMetadata.title}\n            tagline={data.site.siteMetadata.tagline}\n            author={data.site.siteMetadata.author}\n            contacts={data.site.siteMetadata.contacts} />\n          <div\n            style={{\n              margin: `0 auto`,\n              padding: `0px 1.0875rem 1.45rem`,\n              paddingTop: 0,\n            }}\n          >\n            <main className=\"p-4\">{children}</main>\n            <footer className=\"text-center\">\n              <hr/>\n              <p className=\"d-inline\">© {new Date().getFullYear()} <a className=\"text-info\" href=\"https://willjw3.github.io/\">willjw3</a>, All Rights Reserved.</p>\n              <p className=\"mt-5 text-muted d-inline\"><i> Built with\n                            {` `}\n                <a className=\"text-info\" href=\"https://www.gatsbyjs.org\">Gatsby</a></i>\n              </p>\n            </footer>\n          </div>\n        </>\n      )}\n    />\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport \"./sidebar.css\"\n\nimport danivelop from \"../../images/danivelop.png\"\n\nconst Bio = ({ author, tagline }) => {\n\n    return (\n        <div className=\"bio-main w-75\">\n            <div className=\"profile\">\n                <div className=\"profile-img\">\n                    <img src={danivelop} alt=\"\" />\n                </div>\n                <h3 className=\"mt-2 author-bio\">{author}</h3>\n            </div>\n            <small className=\"text-muted\">{tagline}</small>\n        </div>\n    )\n}\n\nexport default Bio","import React from \"react\"\nimport {\n    FaLinkedin,\n    FaGithubSquare,\n    FaStackOverflow,\n    FaFreeCodeCamp,\n    FaTwitterSquare\n} from \"react-icons/fa\"\nimport \"./sidebar.css\"\n\n\nconst SocialLinks = ({ contacts }) => {\n    return (\n        <div className=\"side-social-links float-left mt-3 mb-3\">\n            {/* <a className=\"text-secondary p-2\" target=\"_blank\"\n                href={contacts.linkedin}>\n                <span title=\"Linked In\">\n                    <FaLinkedin size={26} style={{ color: \"secondary\" }} />\n                </span>\n            </a> */}\n            <a className=\"text-secondary p-2\" target=\"_blank\"\n                href={contacts.github}>\n                <span title=\"GitHub\">\n                    <FaGithubSquare size={26} style={{ color: \"secondary\" }} />\n                </span>\n            </a>\n            {/* <a className=\"text-secondary p-2\" target=\"_blank\"\n                href={contacts.stackoverflow}>\n                <span title=\"Stack Overflow\">\n                    <FaStackOverflow size={26} style={{ color: \"secondary\" }} />\n                </span>\n            </a> */}\n            {/* <a className=\"text-secondary p-2\" target=\"_blank\"\n                href={contacts.freecodecamp}>\n                <span title=\"freeCodeCamp\">\n                    <FaFreeCodeCamp size={26} style={{ color: \"secondary\" }} />\n                </span>\n            </a> */}\n            {/* <a className=\"text-secondary p-2\" target=\"_blank\"\n                href={contacts.twitter}>\n                <span title=\"Twitter\">\n                    <FaTwitterSquare size={26} style={{ color: \"secondary\" }} />\n                </span>\n            </a> */}\n        </div>\n    )\n}\n\nexport default SocialLinks","import React from \"react\"\n\nimport TechTag from \"../tags/TechTag\"\n\nconst TechTags = (props) => {\n    const labels = props.labels\n    const posts = props.posts\n\n    const labelCount = labels.map(label => {\n        let count = 0;\n        posts.forEach(post => {\n            if (post.node.frontmatter.tags.includes(label.tag)) {\n                count = count + 1\n            }\n        })\n        return [label.tag, count]\n    })\n\n    const categories = labelCount.filter(label => {\n        return label[1] > 0\n    })\n\n    const tags = categories.map(category => {\n        return category[0]\n    })\n\n\n\n    const getTechTags = (tags) => {\n        const techTags = []\n        tags.forEach((tag, i) => {\n            labels.forEach((label) => {\n                if (tag === label.tag) {\n                    techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\n                }\n            })\n        })\n        return techTags\n    }\n\n\n    return (\n        <>\n            <h4>Tech Topics</h4>\n            <div className=\"d-block\">\n                {getTechTags(tags)}\n            </div>\n        </>\n    )\n}\n\n\nexport default TechTags","import React from \"react\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nimport Bio from \"./Bio\"\nimport \"./sidebar.css\"\n\nimport SocialLinks from \"./SocialLinks\"\nimport TechTags from \"./TechTags\"\n\n\nconst Sidebar = () => {\n    return (\n        <StaticQuery\n            query={graphql`\n                query SiteBioQuery {\n                    site {\n                        siteMetadata {\n                            title\n                            tagline\n                            author\n                            contacts {\n                                linkedin\n                                github\n                                stackoverflow\n                                freecodecamp\n                                twitter\n                            }\n                            labels {\n                                tag\n                                tech\n                                name \n                                size \n                                color\n                            }\n                        }\n                    }\n                    allMarkdownRemark(\n                        limit: 10\n                        sort: { fields: [frontmatter___date], order: DESC }\n                        filter: { frontmatter: { published: { eq: true } } }\n                    ) {\n                        edges {\n                            node {\n                                frontmatter {\n                                    tags\n                                }\n                            }\n                        }\n                    }\n                }\n            `}\n            render={data => (\n                <>\n                    <div className=\"sidebar-main border-right\">\n                        <Bio author={data.site.siteMetadata.author} tagline={data.site.siteMetadata.tagline} />\n                        <SocialLinks contacts={data.site.siteMetadata.contacts} />\n                        <div className=\"page-links\">\n                            <Link to=\"/\"><span className=\"text-dark d-block py-1\">Blog Home</span></Link>\n                            <Link to=\"/about\"><span className=\"text-dark d-block py-1\">About</span></Link>\n                            <Link to=\"/archive\"><span className=\"text-dark d-block py-1\">Archive</span></Link>\n                        </div>\n                        <div className=\"tech-tags mt-4\">\n                            <TechTags labels={data.site.siteMetadata.labels} posts={data.allMarkdownRemark.edges} />\n                        </div>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default Sidebar"],"sourceRoot":""}