{"version":3,"sources":["webpack:///./src/templates/tag.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/images/danivelop.png","webpack:///./src/components/tags/TechTag.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header/MobileSocialLinks.js","webpack:///./src/components/header/MobilePageLinks.js","webpack:///./src/components/header/SocialLinks.js","webpack:///./src/components/header/MobileBio.js","webpack:///./src/components/header/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/sidebar/Bio.js","webpack:///./src/components/sidebar/SocialLinks.js","webpack:///./src/components/sidebar/TechTags.js","webpack:///./src/components/sidebar/Sidebar.js"],"names":["Tag","_ref","pageContext","data","posts","allMarkdownRemark","edges","labels","site","siteMetadata","tag","totalCount","tagHeader","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","_components_seo__WEBPACK_IMPORTED_MODULE_7__","title","keywords","className","_components_sidebar_Sidebar__WEBPACK_IMPORTED_MODULE_8__","map","post","tags","node","frontmatter","key","id","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","date","excerpt","techTags","forEach","i","label","push","_components_tags_TechTag__WEBPACK_IMPORTED_MODULE_9__","tech","name","size","color","getTechTags","propTypes","PropTypes","shape","string","isRequired","number","arrayOf","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","object","func","dP","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e","m","module","exports","require","default","p","TechTag","style","fontSize","role","viewBox","xmlns","width","height","fill","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","MobileSocialLinks","contacts","react_default","target","href","github","index_esm","MobilePages","gatsby_browser_entry","SocialLinks","MobileBio","src","danivelop","alt","Header","siteTitle","tagline","background","margin","padding","textDecoration","header_SocialLinks","header_MobileSocialLinks","MobilePageLinks","header_MobileBio","Layout","Fragment","header_header","paddingTop","Date","getFullYear","_2988051195","Bio","TechTags","count","includes","filter","category","Sidebar","sidebar_Bio","sidebar_SocialLinks","sidebar_TechTags","_1503498308"],"mappings":"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","file":"component---src-templates-tag-js-03b7a8993f19dc4bbf84.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link, graphql } from \"gatsby\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"../pages/index.css\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Sidebar from \"../components/sidebar/Sidebar\"\nimport TechTag from \"../components/tags/TechTag\"\n\nconst Tag = ({ pageContext, data }) => {\n    const posts = data.allMarkdownRemark.edges\n    const labels = data.site.siteMetadata.labels\n    const { tag } = pageContext\n    const { totalCount } = data.allMarkdownRemark\n    const tagHeader = `${totalCount} post${\n        totalCount === 1 ? \"\" : \"s\"\n        } tagged with \"${tag}\"`\n\n    const getTechTags = (tags) => {\n        const techTags = []\n        tags.forEach((tag, i) => {\n            labels.forEach((label) => {\n                if (tag === label.tag) {\n                    techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\n                }\n            })\n        })\n        return techTags\n    }\n\n    return (\n        <Layout>\n            <SEO title=\"Home\" keywords={[`gatsby`, `javascript`, `react`, `web development`, `node.js`, `graphql`]} />\n            <div className=\"index-main\">\n                <div className=\"sidebar px-4 py-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"post-list-main\">\n                    <i><h2 className=\"heading\">{tagHeader}</h2></i>\n                    {posts.map((post) => {\n                        const tags = post.node.frontmatter.tags\n                        return (\n                            <div key={post.node.id} className=\"container mt-5\">\n                                <Link\n                                    to={post.node.fields.slug}\n                                    className=\"text-dark\"\n                                >\n                                    <h2 className=\"heading\">{post.node.frontmatter.title}</h2>\n                                </Link>\n                                <small className=\"d-block text-info\">Posted on {post.node.frontmatter.date}\n                                </small>\n                                <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\n                                <Link\n                                    to={post.node.fields.slug}\n                                    className=\"text-primary\"\n                                >\n                                    <small className=\"d-inline-block ml-3\"> Read full post</small>\n                                </Link>\n                                <div className=\"d-block\">\n                                    {getTechTags(tags)}\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        </Layout>\n    )\n}\n\nTag.propTypes = {\n    pageContext: PropTypes.shape({\n        tag: PropTypes.string.isRequired,\n    }),\n    data: PropTypes.shape({\n        allMarkdownRemark: PropTypes.shape({\n            totalCount: PropTypes.number.isRequired,\n            edges: PropTypes.arrayOf(\n                PropTypes.shape({\n                    node: PropTypes.shape({\n                        frontmatter: PropTypes.shape({\n                            title: PropTypes.string.isRequired,\n                        }),\n                    }),\n                }).isRequired\n            ),\n        }),\n    }),\n}\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n        siteMetadata {\n            title \n            author\n            labels {\n                tag\n                tech \n                name \n                size \n                color\n            } \n        }\n    } \n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n         node {\n            excerpt(pruneLength: 200)\n            html\n            id\n            frontmatter {\n                title\n                date(formatString: \"MMMM, YYYY\")\n                tags\n            }\n             fields {\n                slug\n            }\n        }\n      }\n    }\n  }\n`\n\nexport default Tag","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","module.exports = __webpack_public_path__ + \"static/danivelop-e4779314e6fc0af2fea09591f35fa90c.png\";","import React from \"react\"\n\nimport \"./tags.css\"\nimport { Link } from \"gatsby\";\n\nconst TechTag = (props) => {\n    const { tag, tech, name, size, color } = props\n\n    return (\n        <div className=\"d-inline-block p-1\">\n            <Link to={`/tags/${tag}/`}>\n                <button\n                    className=\"tech-tag text-white\">\n                    <p className=\"d-inline\">{tech} </p>\n                    <div className=\"d-inline\" style={{ fontSize: size, color: color }}><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size} style={{fill: `${color}`}}>\n                            <title>{tech}</title>\n                            <path\n                                d={name} />\n                        </svg></div>\n                </button>\n            </Link>\n\n        </div>\n\n    )\n}\n\nexport default TechTag","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\";\nimport {\n    FaLinkedin,\n    FaGithubSquare,\n    FaStackOverflow,\n    FaFreeCodeCamp,\n    FaTwitterSquare\n} from \"react-icons/fa\"\n\nimport \"../layout.css\"\n\nconst MobileSocialLinks = ({ contacts }) => {\n    return (\n        <div className=\"bottom-bar py-1\">\n            {/* <a className=\" text-primary\" target=\"_blank\"\n                href={contacts.linkedin}>\n                <span title=\"Linked In\">\n                    <FaLinkedin size={26} style={{ color: \"primary\" }} />\n                </span>\n            </a> */}\n            <a className=\"text-light\" target=\"_blank\"\n                href={contacts.github}>\n                <span title=\"GitHub\">\n                    <FaGithubSquare size={26} style={{ color: \"light\" }} />\n                </span>\n            </a>\n            {/* <a className=\"text-warning\" target=\"_blank\"\n                href={contacts.stackoverflow}>\n                <span title=\"Stack Overflow\">\n                    <FaStackOverflow size={26} style={{ color: \"warning\" }} />\n                </span>\n            </a> */}\n            {/* <a className=\"text-success\" target=\"_blank\"\n                href={contacts.freecodecamp}>\n                <span title=\"freeCodeCamp\">\n                    <FaFreeCodeCamp size={26} style={{ color: \"success\" }} />\n                </span>\n            </a> */}\n            {/* <a className=\"text-info\" target=\"_blank\"\n                href={contacts.twitter}>\n                <span title=\"Twitter\">\n                    <FaTwitterSquare size={26} style={{ color: \"info\" }} />\n                </span>\n            </a> */}\n        </div>\n    )\n}\n\nexport default MobileSocialLinks;","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst MobilePages = () => {\n    return (\n        <div className=\"mobile-pages-main\">\n            <div className=\"text-center\">\n                <p className=\"d-inline p-4\"><Link to=\"/\"><span className=\"text-dark\">Blog Home</span></Link></p>\n                <p className=\"d-inline p-4\"><Link to=\"/about\"><span className=\"text-dark\">About</span></Link></p>\n                <p className=\"d-inline p-4\"><Link to=\"/archive\"><span className=\"text-dark\">Archive</span></Link></p>\n            </div>\n        </div>\n    )\n}\n\nexport default MobilePages\n\n\n","import React from \"react\"\nimport {\n    FaLinkedin,\n    FaGithubSquare,\n    FaStackOverflow,\n    FaFreeCodeCamp,\n    FaTwitterSquare\n} from \"react-icons/fa\"\n\n\nconst SocialLinks = ({ contacts }) => {\n    return (\n        <div className=\"social-links float-right mr-4\">\n            {/* <a className=\"text-primary ml-4\" target=\"_blank\"\n                href={contacts.linkedin}>\n                <span title=\"Linked In\">\n                    <FaLinkedin size={40} style={{ color: \"primary\" }} />\n                </span>\n            </a> */}\n            <a className=\"text-light ml-4\" target=\"_blank\"\n                href={contacts.github}>\n                <span title=\"GitHub\">\n                    <FaGithubSquare size={40} style={{ color: \"light\" }} />\n                </span>\n            </a>\n            {/* <a className=\"text-warning ml-4\" target=\"_blank\"\n                href={contacts.stackoverflow}>\n                <span title=\"Stack Overflow\">\n                    <FaStackOverflow size={40} style={{ color: \"warning\" }} />\n                </span>\n            </a> */}\n            {/* <a className=\"text-success ml-4\" target=\"_blank\"\n                href={contacts.freecodecamp}>\n                <span title=\"freeCodeCamp\">\n                    <FaFreeCodeCamp size={40} style={{ color: \"success\" }} />\n                </span>\n            </a> */}\n            {/* <a className=\"text-info ml-4\" target=\"_blank\"\n                href={contacts.twitter}>\n                <span title=\"Twitter\">\n                    <FaTwitterSquare size={40} style={{ color: \"info\" }} />\n                </span>\n            </a> */}\n        </div>\n    )\n}\n\nexport default SocialLinks","import React from \"react\"\n\nimport \"./header.css\"\nimport danivelop from \"../../images/danivelop.png\"\n\nconst MobileBio = (props) => {\n\n    return (\n        <div className=\"mobile-bio-main\">\n            <div className=\"ml-4 mt-2 mobile-profile\">\n                <img src={danivelop} alt=\"author-pic\" />\n            </div>\n            {/* <img src={danivelop}  className=\"ml-4 mt-2\" style={{ maxWidth: `75px`, maxHeight: `75px`, borderRadius: `50%`,boxShadow: `1px 1px 3px`}} alt=\"author-pic\" /> */}\n            <h4 className=\"mr-4 mt-4\">{props.author}</h4>\n        </div>\n    )\n}\n\nexport default MobileBio","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\n\n\nimport MobileSocialLinks from \"./MobileSocialLinks\"\nimport MobilePageLinks from \"./MobilePageLinks\"\nimport SocialLinks from \"./SocialLinks\"\nimport MobileBio from \"./MobileBio\"\nimport \"./header.css\"\n\nconst Header = ({ siteTitle, tagline, author, contacts }) => {\n\n  return (\n    <header\n      className=\"head-main\"\n      style={{\n        background: `black`\n      }}\n    >\n      <div className=\"head-elements\"\n        style={{\n          margin: `0`,\n          padding: `.75rem`\n        }}\n      >\n        <h1 className=\"head-logo ml-4\" style={{ margin: 0 }}>\n          <Link\n            to=\"/\"\n            style={{\n              color: `white`,\n              textDecoration: `none`,\n            }}\n          >\n            {siteTitle}\n          </Link>\n        </h1>\n        <SocialLinks contacts={contacts} />\n      </div>\n      <MobileSocialLinks contacts={contacts} />\n      <MobilePageLinks />\n      <MobileBio author={author} />\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport Header from \"./header/header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n\n  return (\n    <StaticQuery\n      query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            tagline\n            author\n            contacts {\n              linkedin\n              github\n              stackoverflow\n              freecodecamp\n              twitter\n            }\n          }\n        }\n      }\n    `}\n      render={data => (\n        <>\n          <Header\n            siteTitle={data.site.siteMetadata.title}\n            tagline={data.site.siteMetadata.tagline}\n            author={data.site.siteMetadata.author}\n            contacts={data.site.siteMetadata.contacts} />\n          <div\n            style={{\n              margin: `0 auto`,\n              padding: `0px 1.0875rem 1.45rem`,\n              paddingTop: 0,\n            }}\n          >\n            <main className=\"p-4\">{children}</main>\n            <footer className=\"text-center\">\n              <hr/>\n              <p className=\"d-inline\">© {new Date().getFullYear()} <a className=\"text-info\" href=\"https://willjw3.github.io/\">willjw3</a>, All Rights Reserved.</p>\n              <p className=\"mt-5 text-muted d-inline\"><i> Built with\n                            {` `}\n                <a className=\"text-info\" href=\"https://www.gatsbyjs.org\">Gatsby</a></i>\n              </p>\n            </footer>\n          </div>\n        </>\n      )}\n    />\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport \"./sidebar.css\"\n\nimport danivelop from \"../../images/danivelop.png\"\n\nconst Bio = ({ author, tagline }) => {\n\n    return (\n        <div className=\"bio-main w-75\">\n            <div className=\"profile\">\n                <div className=\"profile-img\">\n                    <img src={danivelop} alt=\"\" />\n                </div>\n                <h3 className=\"mt-2 author-bio\">{author}</h3>\n            </div>\n            <small className=\"text-muted\">{tagline}</small>\n        </div>\n    )\n}\n\nexport default Bio","import React from \"react\"\nimport {\n    FaLinkedin,\n    FaGithubSquare,\n    FaStackOverflow,\n    FaFreeCodeCamp,\n    FaTwitterSquare\n} from \"react-icons/fa\"\nimport \"./sidebar.css\"\n\n\nconst SocialLinks = ({ contacts }) => {\n    return (\n        <div className=\"side-social-links float-left mt-3 mb-3\">\n            {/* <a className=\"text-secondary p-2\" target=\"_blank\"\n                href={contacts.linkedin}>\n                <span title=\"Linked In\">\n                    <FaLinkedin size={26} style={{ color: \"secondary\" }} />\n                </span>\n            </a> */}\n            <a className=\"text-secondary p-2\" target=\"_blank\"\n                href={contacts.github}>\n                <span title=\"GitHub\">\n                    <FaGithubSquare size={26} style={{ color: \"secondary\" }} />\n                </span>\n            </a>\n            {/* <a className=\"text-secondary p-2\" target=\"_blank\"\n                href={contacts.stackoverflow}>\n                <span title=\"Stack Overflow\">\n                    <FaStackOverflow size={26} style={{ color: \"secondary\" }} />\n                </span>\n            </a> */}\n            {/* <a className=\"text-secondary p-2\" target=\"_blank\"\n                href={contacts.freecodecamp}>\n                <span title=\"freeCodeCamp\">\n                    <FaFreeCodeCamp size={26} style={{ color: \"secondary\" }} />\n                </span>\n            </a> */}\n            {/* <a className=\"text-secondary p-2\" target=\"_blank\"\n                href={contacts.twitter}>\n                <span title=\"Twitter\">\n                    <FaTwitterSquare size={26} style={{ color: \"secondary\" }} />\n                </span>\n            </a> */}\n        </div>\n    )\n}\n\nexport default SocialLinks","import React from \"react\"\n\nimport TechTag from \"../tags/TechTag\"\n\nconst TechTags = (props) => {\n    const labels = props.labels\n    const posts = props.posts\n\n    const labelCount = labels.map(label => {\n        let count = 0;\n        posts.forEach(post => {\n            if (post.node.frontmatter.tags.includes(label.tag)) {\n                count = count + 1\n            }\n        })\n        return [label.tag, count]\n    })\n\n    const categories = labelCount.filter(label => {\n        return label[1] > 0\n    })\n\n    const tags = categories.map(category => {\n        return category[0]\n    })\n\n\n\n    const getTechTags = (tags) => {\n        const techTags = []\n        tags.forEach((tag, i) => {\n            labels.forEach((label) => {\n                if (tag === label.tag) {\n                    techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size} color={label.color} />)\n                }\n            })\n        })\n        return techTags\n    }\n\n\n    return (\n        <>\n            <h4>Tech Topics</h4>\n            <div className=\"d-block\">\n                {getTechTags(tags)}\n            </div>\n        </>\n    )\n}\n\n\nexport default TechTags","import React from \"react\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nimport Bio from \"./Bio\"\nimport \"./sidebar.css\"\n\nimport SocialLinks from \"./SocialLinks\"\nimport TechTags from \"./TechTags\"\n\n\nconst Sidebar = () => {\n    return (\n        <StaticQuery\n            query={graphql`\n                query SiteBioQuery {\n                    site {\n                        siteMetadata {\n                            title\n                            tagline\n                            author\n                            contacts {\n                                linkedin\n                                github\n                                stackoverflow\n                                freecodecamp\n                                twitter\n                            }\n                            labels {\n                                tag\n                                tech\n                                name \n                                size \n                                color\n                            }\n                        }\n                    }\n                    allMarkdownRemark(\n                        limit: 10\n                        sort: { fields: [frontmatter___date], order: DESC }\n                        filter: { frontmatter: { published: { eq: true } } }\n                    ) {\n                        edges {\n                            node {\n                                frontmatter {\n                                    tags\n                                }\n                            }\n                        }\n                    }\n                }\n            `}\n            render={data => (\n                <>\n                    <div className=\"sidebar-main border-right\">\n                        <Bio author={data.site.siteMetadata.author} tagline={data.site.siteMetadata.tagline} />\n                        <SocialLinks contacts={data.site.siteMetadata.contacts} />\n                        <div className=\"page-links\">\n                            <Link to=\"/\"><span className=\"text-dark d-block py-1\">Blog Home</span></Link>\n                            <Link to=\"/about\"><span className=\"text-dark d-block py-1\">About</span></Link>\n                            <Link to=\"/archive\"><span className=\"text-dark d-block py-1\">Archive</span></Link>\n                        </div>\n                        <div className=\"tech-tags mt-4\">\n                            <TechTags labels={data.site.siteMetadata.labels} posts={data.allMarkdownRemark.edges} />\n                        </div>\n                    </div>\n                </>\n            )}\n        />\n    )\n}\n\nexport default Sidebar"],"sourceRoot":""}